{"ast":null,"code":"var _jsxFileName = \"E:\\\\Krishna_Work\\\\React_Js\\\\github_clone\\\\react-crud\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register\";\nimport List from \"./Components/List\";\nimport Task from \"./Components/Task\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const registrationHandler = event => {\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    setIsRegistered(true);\n    event.preventDefault();\n  };\n  // useEffect(() => {\n  //   localStorage.setItem('tasks', JSON.stringify(tasks));\n  // }, [tasks]);\n\n  const addTask = name => {\n    setTasks(prevTasks => [...prevTasks, {\n      name: name,\n      done: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container register-contaneir card pt-3 pb-3\",\n      children: this.state.isRegistered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          onAdd: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n          ...task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Register, {\n        submit: this.registrationHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hCc0lT8O47bYnOSFflytCLSPXTg=\");\n_c = App;\nexport default App;\n\n// function HelloWorld() {\n//   return (\n//       <div>\n//           <h1>Hello, world!</h1>\n//       </div>\n//   );\n// }\n// export default HelloWorld;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Register","List","Task","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isRegistered","setIsRegistered","tasks","setTasks","registrationHandler","event","email","target","value","password","preventDefault","addTask","name","prevTasks","done","className","children","state","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","map","task","submit","_c","$RefreshReg$"],"sources":["E:/Krishna_Work/React_Js/github_clone/react-crud/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Register from \"./Components/Register\";\r\nimport List from \"./Components/List\";\r\nimport Task from \"./Components/Task\";\r\n\r\nconst App = () => {\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const registrationHandler = (event) => {\r\n    const email = event.target.email.value;\r\n    const password = event.target.password.value;\r\n    setIsRegistered(true);\r\n    event.preventDefault();\r\n  };\r\n  // useEffect(() => {\r\n  //   localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  // }, [tasks]);\r\n\r\n  const addTask = (name) => {\r\n    setTasks(prevTasks => [...prevTasks, { name: name, done: false }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n    <div className=\"container register-contaneir card pt-3 pb-3\">\r\n      {this.state.isRegistered ? (\r\n        <>\r\n          <List onAdd={addTask}></List>\r\n          {tasks.map(task => (\r\n            <Task {...task} />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <Register submit={this.registrationHandler}></Register>\r\n      )}\r\n\r\n    </div>\r\n  </div>\r\n\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// function HelloWorld() {\r\n//   return (\r\n//       <div>\r\n//           <h1>Hello, world!</h1>\r\n//       </div>\r\n//   );\r\n// }\r\n// export default HelloWorld;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK,CAACE,KAAK;IACtC,MAAMC,QAAQ,GAAGJ,KAAK,CAACE,MAAM,CAACE,QAAQ,CAACD,KAAK;IAC5CP,eAAe,CAAC,IAAI,CAAC;IACrBI,KAAK,CAACK,cAAc,CAAC,CAAC;EACxB,CAAC;EACD;EACA;EACA;;EAEA,MAAMC,OAAO,GAAIC,IAAI,IAAK;IACxBT,QAAQ,CAACU,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE;MAAED,IAAI,EAAEA,IAAI;MAAEE,IAAI,EAAE;IAAM,CAAC,CAAC,CAAC;EACpE,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACrBrB,OAAA;MAAKoB,SAAS,EAAC,6CAA6C;MAAAC,QAAA,EACzD,IAAI,CAACC,KAAK,CAACjB,YAAY,gBACtBL,OAAA,CAAAE,SAAA;QAAAmB,QAAA,gBACErB,OAAA,CAACH,IAAI;UAAC0B,KAAK,EAAEP;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAC5BpB,KAAK,CAACqB,GAAG,CAACC,IAAI,iBACb7B,OAAA,CAACF,IAAI;UAAA,GAAK+B;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAClB,CAAC;MAAA,eACF,CAAC,gBAEH3B,OAAA,CAACJ,QAAQ;QAACkC,MAAM,EAAE,IAAI,CAACrB;MAAoB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IACvD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGR,CAAC;AAACvB,EAAA,CApCID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAsCT,eAAeA,GAAG;;AAIlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}