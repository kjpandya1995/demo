{"ast":null,"code":"var _jsxFileName = \"/home/iteamandroid/Desktop/Learning/ReactJs/react-crud/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register\";\nimport List from \"./Components/List\";\nimport Task from \"./Components/Task\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRegistered, setIsRegistered] = useState(false);\n  // const [, setEmail] = useState(null);\n  // const [, setPassword] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  // const registrationHandler = (event) => {\n  //     setEmail(event.target.email.value);\n  //     setPassword(event.target.password.value);\n  //     setIsRegistered(true);\n  //     event.preventDefault();\n  // };\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks'));\n    setTasks(tasks);\n  }, []);\n  const addTask = name => {\n    setTasks(prevTasks => [...prevTasks, {\n      name: name,\n      done: false\n    }]);\n  };\n  function removeTask(indexToRemove) {\n    setTasks(prev => {\n      return prev.filter((taskObject, index) => index !== indexToRemove);\n    });\n  }\n  function updateTaskDone(taskIndex, newdone) {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[taskIndex].done = newdone;\n      return newTasks;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container register-container card pt-3 pb-3\",\n      children: isRegistered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          onAdd: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n          ...task,\n          onTrash: () => removeTask(index),\n          onToggle: done => updateTaskDone(index, done)\n        }, task.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true) :\n      /*#__PURE__*/\n      // <Register submit={registrationHandler}></Register>\n      _jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"xDlDdpQZxQSeKYwLy10HytAVVOs=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Register","List","Task","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isRegistered","setIsRegistered","tasks","setTasks","localStorage","setItem","JSON","stringify","parse","getItem","addTask","name","prevTasks","done","removeTask","indexToRemove","prev","filter","taskObject","index","updateTaskDone","taskIndex","newdone","newTasks","className","children","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","map","task","onTrash","onToggle","_c","$RefreshReg$"],"sources":["/home/iteamandroid/Desktop/Learning/ReactJs/react-crud/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register\";\nimport List from \"./Components/List\";\nimport Task from \"./Components/Task\";\n\nfunction App() {\n    const [isRegistered, setIsRegistered] = useState(false);\n    // const [, setEmail] = useState(null);\n    // const [, setPassword] = useState(null);\n    const [tasks, setTasks] = useState([]);\n\n    // const registrationHandler = (event) => {\n    //     setEmail(event.target.email.value);\n    //     setPassword(event.target.password.value);\n    //     setIsRegistered(true);\n    //     event.preventDefault();\n    // };\n\n    useEffect(() => {\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }, [tasks]);\n\n    useEffect(() => {\n        const tasks = JSON.parse(localStorage.getItem('tasks'));\n        setTasks(tasks);\n    }, []);\n\n    const addTask = (name) => {\n        setTasks(prevTasks => [...prevTasks, { name: name, done: false }]);\n    };\n\n    function removeTask(indexToRemove) {\n        setTasks(prev => {\n            return prev.filter((taskObject, index) => index !== indexToRemove);\n        });\n\n    }\n\n    function updateTaskDone(taskIndex, newdone) {\n        setTasks(prev => {\n            const newTasks = [...prev];\n            newTasks[taskIndex].done = newdone;\n            return newTasks;\n        });\n    }\n\n    return (\n        <div className=\"main\">\n            <div className=\"container register-container card pt-3 pb-3\">\n\n                {isRegistered ? (\n                    <>\n                        <List onAdd={addTask}></List>\n                        {tasks.map((task, index) => (\n                            <Task key={task.name} {...task}\n                                onTrash={() => removeTask(index)}\n                                onToggle={done => updateTaskDone(index, done)} />\n                        ))}\n                    </>\n                ) : (\n                    // <Register submit={registrationHandler}></Register>\n                    <Register></Register>\n\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}