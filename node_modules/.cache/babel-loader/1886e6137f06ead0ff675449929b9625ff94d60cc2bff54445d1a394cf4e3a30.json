{"ast":null,"code":"var _jsxFileName = \"/home/iteamandroid/Desktop/Learning/ReactJs/react-crud/src/Components/Register.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export default function Register(props) {\n//     return (\n//         <div className=\"\">\n//             <h1 className=\"text-center\">Login</h1>\n//             <form onSubmit={props.submit}>\n//                 <div className=\"from-group mt-3\">\n//                     <label htmlFor=\"email\">Email:</label>\n//                     <input type=\"text\" name=\"email\" required className=\"form-control\" />\n//                 </div>\n//                 <div className=\"from-group mt-3\">\n//                     <label htmlFor=\"password\">Password:</label>\n//                     <input type=\"password\" name=\"password\" required className=\"form-control\" />\n//                 </div>\n//                 <button type=\"submit\" className=\"btn btn-primary mt-3\">Login</button>\n//             </form>\n//         </div>\n\n//     )\n// }\n\n// const RegisterForm = () => {\n//     // State variables for email and password\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     // Event handler for email input change\n//     const handleEmailChange = (event) => {\n//       setEmail(event.target.value);\n//     };\n\n//     // Event handler for password input change\n//     const handlePasswordChange = (event) => {\n//       setPassword(event.target.value);\n//     };\n\n//     // Event handler for form submission\n//     const handleSubmit = (event) => {\n//       event.preventDefault();\n//       // Add your logic for handling form submission (e.g., API call, validation, etc.)\n//       console.log('Email:', email);\n//       console.log('Password:', password);\n//     };\n\n//     return (\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"email\">Email:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={handleEmailChange}\n//             placeholder=\"Enter your email\"\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={password}\n//             onChange={handlePasswordChange}\n//             placeholder=\"Enter your password\"\n//           />\n//         </div>\n//         <button type=\"submit\">Register</button>\n//       </form>\n//     );\n//   };\n\n//   export default RegisterForm;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Perform authentication logic here (e.g., check username and password)\n    if (username === 'user' && password === 'password') {\n      // Redirect to another page if authentication is successful\n      //   history.push('/dashboard');\n    } else {\n      alert('Invalid username or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: username,\n        onChange: handleUsernameChange,\n        placeholder: \"Enter your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: handlePasswordChange,\n        placeholder: \"Enter your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","handleUsernameChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","alert","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["/home/iteamandroid/Desktop/Learning/ReactJs/react-crud/src/Components/Register.js"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// export default function Register(props) {\n//     return (\n//         <div className=\"\">\n//             <h1 className=\"text-center\">Login</h1>\n//             <form onSubmit={props.submit}>\n//                 <div className=\"from-group mt-3\">\n//                     <label htmlFor=\"email\">Email:</label>\n//                     <input type=\"text\" name=\"email\" required className=\"form-control\" />\n//                 </div>\n//                 <div className=\"from-group mt-3\">\n//                     <label htmlFor=\"password\">Password:</label>\n//                     <input type=\"password\" name=\"password\" required className=\"form-control\" />\n//                 </div>\n//                 <button type=\"submit\" className=\"btn btn-primary mt-3\">Login</button>\n//             </form>\n//         </div>\n\n//     )\n// }\n\n// const RegisterForm = () => {\n//     // State variables for email and password\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n  \n//     // Event handler for email input change\n//     const handleEmailChange = (event) => {\n//       setEmail(event.target.value);\n//     };\n  \n//     // Event handler for password input change\n//     const handlePasswordChange = (event) => {\n//       setPassword(event.target.value);\n//     };\n  \n//     // Event handler for form submission\n//     const handleSubmit = (event) => {\n//       event.preventDefault();\n//       // Add your logic for handling form submission (e.g., API call, validation, etc.)\n//       console.log('Email:', email);\n//       console.log('Password:', password);\n//     };\n  \n//     return (\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label htmlFor=\"email\">Email:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={handleEmailChange}\n//             placeholder=\"Enter your email\"\n//           />\n//         </div>\n//         <div>\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             value={password}\n//             onChange={handlePasswordChange}\n//             placeholder=\"Enter your password\"\n//           />\n//         </div>\n//         <button type=\"submit\">Register</button>\n//       </form>\n//     );\n//   };\n  \n//   export default RegisterForm;\n\nimport React, { useState } from 'react';\n\n\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Perform authentication logic here (e.g., check username and password)\n    if (username === 'user' && password === 'password') {\n      // Redirect to another page if authentication is successful\n    //   history.push('/dashboard');\n    \n    } else {\n      alert('Invalid username or password');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"username\">Username:</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          value={username}\n          onChange={handleUsernameChange}\n          placeholder=\"Enter your username\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={handlePasswordChange}\n          placeholder=\"Enter your password\"\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}