{"ast":null,"code":"var _jsxFileName = \"E:\\\\Krishna_Work\\\\React_Js\\\\github_clone\\\\react-crud\\\\src\\\\App.js\";\n// import React, { useEffect, useState } from \"react\";\n// import \"./App.css\";\n// import Register from \"./Components/Register\";\n// import List from \"./Components/List\";\n// import Task from \"./Components/Task\";\nimport react from \"react\";\n// const App = () => {\n//   const [isRegistered, setIsRegistered] = useState(false);\n//   const [tasks, setTasks] = useState([]);\n\n//   const registrationHandler = (event) => {\n//     const email = event.target.email.value;\n//     const password = event.target.password.value;\n//     setIsRegistered(true);\n//     event.preventDefault();\n//   };\n//   useEffect(() => {\n//     localStorage.setItem('tasks', JSON.stringify(tasks));\n//   }, [tasks]);\n\n//   const addTask = (name) => {\n//     setTasks(prevTasks => [...prevTasks, { name: name, done: false }]);\n//   };\n\n//   return (\n//     <div className=\"main\">\n//     <div className=\"container register-contaneir card pt-3 pb-3\">\n//       {this.state.isRegistered ? (\n//         <>\n//           <List onAdd={addTask}></List>\n//           {tasks.map(task => (\n//             <Task {...task} />\n//           ))}\n//         </>\n//       ) : (\n//         <Register submit={this.registrationHandler}></Register>\n//       )}\n\n//     </div>\n//   </div>\n\n//   );\n// };\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HelloWorld() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n_c = HelloWorld;\nexport default HelloWorld;\nvar _c;\n$RefreshReg$(_c, \"HelloWorld\");","map":{"version":3,"names":["react","jsxDEV","_jsxDEV","HelloWorld","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Krishna_Work/React_Js/github_clone/react-crud/src/App.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import \"./App.css\";\r\n// import Register from \"./Components/Register\";\r\n// import List from \"./Components/List\";\r\n// import Task from \"./Components/Task\";\r\nimport react from \"react\";\r\n// const App = () => {\r\n//   const [isRegistered, setIsRegistered] = useState(false);\r\n//   const [tasks, setTasks] = useState([]);\r\n\r\n//   const registrationHandler = (event) => {\r\n//     const email = event.target.email.value;\r\n//     const password = event.target.password.value;\r\n//     setIsRegistered(true);\r\n//     event.preventDefault();\r\n//   };\r\n//   useEffect(() => {\r\n//     localStorage.setItem('tasks', JSON.stringify(tasks));\r\n//   }, [tasks]);\r\n\r\n//   const addTask = (name) => {\r\n//     setTasks(prevTasks => [...prevTasks, { name: name, done: false }]);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"main\">\r\n//     <div className=\"container register-contaneir card pt-3 pb-3\">\r\n//       {this.state.isRegistered ? (\r\n//         <>\r\n//           <List onAdd={addTask}></List>\r\n//           {tasks.map(task => (\r\n//             <Task {...task} />\r\n//           ))}\r\n//         </>\r\n//       ) : (\r\n//         <Register submit={this.registrationHandler}></Register>\r\n//       )}\r\n\r\n//     </div>\r\n//   </div>\r\n\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n\r\nfunction HelloWorld() {\r\n  return (\r\n      <div>\r\n          <h1>Hello, world!</h1>\r\n      </div>\r\n  );\r\n}\r\nexport default HelloWorld;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,UAAUA,CAAA,EAAG;EACpB,oBACID,OAAA;IAAAE,QAAA,eACIF,OAAA;MAAAE,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEZ;AAACC,EAAA,GANQN,UAAU;AAOnB,eAAeA,UAAU;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}