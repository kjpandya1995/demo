{"ast":null,"code":"var _jsxFileName = \"/home/iteamandroid/Desktop/Learning/ReactJs/react-crud/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register\";\nimport List from \"./Components/List\";\nimport Task from \"./Components/Task\";\n\n// function App (){\n//   constructor(props) {\n//     super(props)\n\n//     this.state = {\n//       isRegistered: false,\n//       //  name:null,\n//       email: null,\n//       password: null,\n//     };\n//   }\n\n//   registrationHandler = (event) => {\n//     // const name = event.target.name.value;\n//     const email = event.target.email.value;\n//     const password = event.target.password.value;\n//     this.setState({ email, password, isRegistered: true });\n//     event.preventDefault();\n\n//   }\n\n//   render() {\n\n//     const [tasks, setTasks] = useState(0);\n//     useEffect(() => {\n//       localStorage.setItem('tasks', JSON.stringify(tasks));\n//     }, [tasks]);\n//     function addTask(name) {\n//       setTasks(prev => [...prev, { name: name, done: false }]);\n//     }\n\n//     return (\n//       <div className=\"main\">\n//         <div className=\"container register-contaneir card pt-3 pb-3\">\n//           {this.state.isRegistered ? (\n//             <>\n//               <List onAdd={addTask}></List>\n//               {tasks.map(task => (\n//                 <Task {...task} />\n//               ))}\n//             </>\n//           ) : (\n//             <Register submit={this.registrationHandler}></Register>\n//           )}\n\n//         </div>\n//       </div>\n\n//     );\n//   }\n// }\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [, setEmail] = useState(null);\n  const [, setPassword] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const registrationHandler = event => {\n    setEmail(event.target.email.value);\n    setPassword(event.target.password.value);\n    setIsRegistered(true);\n    event.preventDefault();\n  };\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = name => {\n    setTasks(prevTasks => [...prevTasks, {\n      name: name,\n      done: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container register-container card pt-3 pb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), isRegistered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          onAdd: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n          ...task\n        }, task.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Register, {\n        submit: registrationHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xog2ZsTjONZkCwCJWjprSlPvvMo=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Register","List","Task","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isRegistered","setIsRegistered","setEmail","setPassword","tasks","setTasks","registrationHandler","event","target","email","value","password","preventDefault","localStorage","setItem","JSON","stringify","addTask","name","prevTasks","done","className","children","Checkbox","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","map","task","submit","_c","$RefreshReg$"],"sources":["/home/iteamandroid/Desktop/Learning/ReactJs/react-crud/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Register from \"./Components/Register\";\nimport List from \"./Components/List\";\nimport Task from \"./Components/Task\";\n\n// function App (){\n//   constructor(props) {\n//     super(props)\n\n//     this.state = {\n//       isRegistered: false,\n//       //  name:null,\n//       email: null,\n//       password: null,\n//     };\n//   }\n\n//   registrationHandler = (event) => {\n//     // const name = event.target.name.value;\n//     const email = event.target.email.value;\n//     const password = event.target.password.value;\n//     this.setState({ email, password, isRegistered: true });\n//     event.preventDefault();\n\n//   }\n\n//   render() {\n\n//     const [tasks, setTasks] = useState(0);\n//     useEffect(() => {\n//       localStorage.setItem('tasks', JSON.stringify(tasks));\n//     }, [tasks]);\n//     function addTask(name) {\n//       setTasks(prev => [...prev, { name: name, done: false }]);\n//     }\n\n//     return (\n//       <div className=\"main\">\n//         <div className=\"container register-contaneir card pt-3 pb-3\">\n//           {this.state.isRegistered ? (\n//             <>\n//               <List onAdd={addTask}></List>\n//               {tasks.map(task => (\n//                 <Task {...task} />\n//               ))}\n//             </>\n//           ) : (\n//             <Register submit={this.registrationHandler}></Register>\n//           )}\n\n//         </div>\n//       </div>\n\n//     );\n//   }\n// }\n\n\nfunction App() {\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [, setEmail] = useState(null);\n  const [, setPassword] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  const registrationHandler = (event) => {\n    setEmail(event.target.email.value);\n    setPassword(event.target.password.value);\n    setIsRegistered(true);\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTask = (name) => {\n    setTasks(prevTasks => [...prevTasks, { name: name, done: false }]);\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"container register-container card pt-3 pb-3\">\n      <Checkbox />\n        {isRegistered ? (\n          <>\n            <List onAdd={addTask}></List>\n            {tasks.map(task => (\n              <Task key={task.name} {...task} />\n            ))}\n          </>\n        ) : (\n          <Register submit={registrationHandler}></Register>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}